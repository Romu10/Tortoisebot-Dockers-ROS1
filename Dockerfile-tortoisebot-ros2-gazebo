FROM nvidia/cudagl:11.1.1-base-ubuntu20.04

# Change the default shell to Bash
SHELL [ "/bin/bash" , "-c" ]

# Minimal setup
RUN apt-get update \
 && apt-get install -y locales lsb-release \
 && apt-get install -y apt-utils

ARG DEBIAN_FRONTEND=noninteractive
RUN dpkg-reconfigure locales

# Set locale 
RUN apt update \
 && apt install -y locales \
 && locale-gen en_US en_US.UTF-8 \
 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
 && export LANG=en_US.UTF-8 

# Set source: add the ROS 2 apt repository to your system
RUN apt install -y software-properties-common \ 
 && add-apt-repository universe 

# Add the ROS2 GPG key with apt.
RUN apt update \ 
 && apt install -y curl \
 && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

# Add the repository to your sources list
RUN arch=$(dpkg --print-architecture) \
 && ubuntu_codename=$(lsb_release -cs) \
 && url="deb [arch=$arch signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $ubuntu_codename main" \
 && echo "$url" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

# Install ROS2 packages
RUN apt update -y \ 
 && apt upgrade -y \ 
 && apt install -y ros-galactic-ros-base 

# Install rviz2
RUN apt install -y ros-galactic-rviz2

# Install gazebo
RUN apt install -y ros-galactic-gazebo-ros-pkgs

# Install Development tools
RUN apt install -y ros-dev-tools 

# Environment setup
RUN source /opt/ros/galactic/setup.bash

# Create the Ros2 workspace and clone tortoisebot pkgs for ROS2
RUN source /opt/ros/galactic/setup.bash \
 && mkdir -p /ros2_ws/src \
 && cd /ros2_ws/src \
 && git clone -b ros2-galactic --recursive https://github.com/rigbetellabs/tortoisebot.git

# Build the Ros2 workspace and ensure it's sourced
RUN source /opt/ros/galactic/setup.bash \
 && cd /ros2_ws \
 && colcon build 
RUN echo "source /ros2_ws/install/setup.bash" >> ~/.bashrc


